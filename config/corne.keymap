/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp CAPSLOCK  &kp Q  &kp W  &kp E     &kp R      &kp T    &kp Y  &kp U    &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL     &kp A  &kp S  &kp D     &kp F      &kp G    &kp H  &kp J    &kp K      &kp L    &kp SEMI  &kp ENTER
&kp LSHFT     &kp Z  &kp X  &kp C     &kp V      &kp B    &kp N  &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp TAB
                            &kp LGUI  &kp SPACE  &mo 1    &mo 2  &kp SQT  &kp RALT
            >;
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp CLCK          &kp N1    &kp N2  &kp N3     &kp N4     &kp N5       &kp N6     &kp N7    &kp N8    &kp N9   &kp N0   &kp DEL
&kp LEFT_CONTROL  &kp EXCL  &kp AT  &kp POUND  &kp DLLR   &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp F11  &kp F12  &kp ENTER
&kp LSHFT         &kp F1    &kp F2  &kp F3     &kp F4     &kp F5       &kp F6     &kp F7    &kp F8    &kp F9   &kp F10  &kp TAB
                                    &mo 3      &kp SPACE  &none        &none      &kp SQT   &kp RALT
            >;
        };

        programming_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp PIPE       &kp BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS         &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &mkp MB3   &kp DEL
&kp LCTRL  &kp LBKT       &kp RBKT       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE    &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT        &mkp LCLK  &kp ENTER
&kp LSHFT  &kp LC(RS(S))  &kp TILDE      &kp GRAVE             &kp EQUAL              &kp PLUS          &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &mkp RCLK  &kp TAB
                                         &kp LGUI              &kp SPACE              &none             &none           &kp SQT         &mo 3
            >;
        };

        utility_layer {
            bindings = <
&bt BT_CLR    &bt BT_CLR_ALL  &trans            &trans             &kp K_VOLUME_DOWN  &kp K_VOLUME_UP    &trans        &trans        &trans            &trans             &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3       &bt BT_SEL 4       &trans             &trans        &trans        &trans            &trans             &trans  &trans
&out OUT_BLE  &out OUT_USB    &ext_power EP_ON  &ext_power EP_OFF  &trans             &trans             &out OUT_BLE  &out OUT_USB  &ext_power EP_ON  &ext_power EP_OFF  &trans  &trans
                                                &trans             &trans             &trans             &trans        &trans        &trans
            >;
        };
    };
};
